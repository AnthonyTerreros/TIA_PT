services:
  backend:
    build: ./backend_prueba_tecnica_tia
    container_name: backend_app
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/DBTIAPTGestionVentas
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    networks:
      - app_network

  postgres:
    image: postgres:15-alpine
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: DBTIAPTGestionVentas
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d DBTIAPTGestionVentas"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build: ./frontendpruebatecnicatia
    container_name: frontend_app
    restart: always
    ports:
      - "5173:80"
    depends_on:
      - backend
    environment:
      VITE_URL_BACKEND: http://backend:8080/api/v1
    networks:
      - app_network

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge
